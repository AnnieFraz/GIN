Date,Repetitions,Patch,Output,Time,Compiled,Passed Unit Tests?,Opacitor measurement 1
Tue Jan 22 14:10:46 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.97712818
Tue Jan 22 14:10:48 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6523121
Tue Jan 22 14:10:51 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6517836
Tue Jan 22 14:10:53 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.05426221
Tue Jan 22 14:10:55 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67507558
Tue Jan 22 14:10:58 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.82506983
Tue Jan 22 14:11:00 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.59360831
Tue Jan 22 14:11:02 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.2337874
Tue Jan 22 14:11:05 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.06106284
Tue Jan 22 14:11:07 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.59579411
Tue Jan 22 14:11:09 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.42478753
Tue Jan 22 14:11:12 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60070626
Tue Jan 22 14:11:14 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69380828
Tue Jan 22 14:11:16 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80190989
Tue Jan 22 14:11:19 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.59169206
Tue Jan 22 14:11:21 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.95240359
Tue Jan 22 14:11:24 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.82042595
Tue Jan 22 14:11:26 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59575044
Tue Jan 22 14:11:28 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.36729021
Tue Jan 22 14:11:31 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.94222384
Tue Jan 22 14:11:33 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71373045
Tue Jan 22 14:11:35 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.39848896
Tue Jan 22 14:11:38 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49058935
Tue Jan 22 14:11:40 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.0073094
Tue Jan 22 14:11:42 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72787089
Tue Jan 22 14:11:44 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74488561
Tue Jan 22 14:11:47 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.88447279
Tue Jan 22 14:11:49 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72033819
Tue Jan 22 14:11:51 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.8055771
Tue Jan 22 14:11:53 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.97139669
Tue Jan 22 14:13:07 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.93003273
Tue Jan 22 14:13:10 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54407845
Tue Jan 22 14:13:12 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.2692046
Tue Jan 22 14:13:14 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55375875
Tue Jan 22 14:13:17 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57718294
Tue Jan 22 14:13:19 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.36643123
Tue Jan 22 14:13:21 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.4612513
Tue Jan 22 14:13:23 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68300483
Tue Jan 22 14:13:26 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.35751078
Tue Jan 22 14:13:28 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76731869
Tue Jan 22 14:13:30 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.7888597
Tue Jan 22 14:13:32 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.26734903
Tue Jan 22 14:13:35 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.61732982
Tue Jan 22 14:13:37 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.05742861
Tue Jan 22 14:13:40 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.78979544
Tue Jan 22 14:13:42 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71346611
Tue Jan 22 14:13:44 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.47576572
Tue Jan 22 14:13:47 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57397816
Tue Jan 22 14:13:49 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59105904
Tue Jan 22 14:13:51 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54368208
Tue Jan 22 14:13:53 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50657989
Tue Jan 22 14:13:55 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.24891374
Tue Jan 22 14:13:58 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.33798515
Tue Jan 22 14:14:00 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6101882
Tue Jan 22 14:14:02 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57344957
Tue Jan 22 14:14:04 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.33388831
Tue Jan 22 14:14:07 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.21548424
Tue Jan 22 14:14:10 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.78918883
Tue Jan 22 14:14:12 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81908981
Tue Jan 22 14:14:14 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38377626
Tue Jan 22 14:15:01 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59489145
Tue Jan 22 14:15:03 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.17775432
Tue Jan 22 14:15:05 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.45157109
Tue Jan 22 14:15:07 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.4121232
Tue Jan 22 14:15:10 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.05355782
Tue Jan 22 14:15:12 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51695398
Tue Jan 22 14:15:14 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.00268406
Tue Jan 22 14:15:16 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.27977158
Tue Jan 22 14:15:19 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.64259881
Tue Jan 22 14:15:21 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.43458926
Tue Jan 22 14:15:23 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.4110991
Tue Jan 22 14:15:25 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51031325
Tue Jan 22 14:15:27 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.28654964
Tue Jan 22 14:15:30 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.65826434
Tue Jan 22 14:15:32 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.14504109
Tue Jan 22 14:15:35 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.36755446
Tue Jan 22 14:15:37 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51305541
Tue Jan 22 14:15:39 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.37356746
Tue Jan 22 14:15:41 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60995694
Tue Jan 22 14:15:43 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50681124
Tue Jan 22 14:15:46 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.33240169
Tue Jan 22 14:15:48 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.12336795
Tue Jan 22 14:15:50 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.29559691
Tue Jan 22 14:15:52 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.52841822
Tue Jan 22 14:15:54 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71125262
Tue Jan 22 14:15:57 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.19862932
Tue Jan 22 14:15:59 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63939412
Tue Jan 22 14:16:01 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.8797813
Tue Jan 22 14:16:04 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57467204
Tue Jan 22 14:16:06 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.11903985
Tue Jan 22 14:16:30 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.36160761
Tue Jan 22 14:16:32 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61824958
Tue Jan 22 14:16:34 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5897706
Tue Jan 22 14:16:37 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54787788
Tue Jan 22 14:16:39 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.25770189
Tue Jan 22 14:16:41 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.14052019
Tue Jan 22 14:16:43 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.23094089
Tue Jan 22 14:16:46 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.13697971
Tue Jan 22 14:16:48 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.30200629
Tue Jan 22 14:16:50 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49706488
Tue Jan 22 14:16:52 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5968077
Tue Jan 22 14:16:54 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6860773
Tue Jan 22 14:16:57 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55425426
Tue Jan 22 14:16:59 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.3925645
Tue Jan 22 14:17:01 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.66076994
Tue Jan 22 14:17:03 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48160292
Tue Jan 22 14:17:05 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.32533143
Tue Jan 22 14:17:08 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.28183576
Tue Jan 22 14:17:10 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.74575529
Tue Jan 22 14:17:13 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.19665752
Tue Jan 22 14:17:15 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.28384055
Tue Jan 22 14:17:18 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.09214664
Tue Jan 22 14:17:20 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.40449136
Tue Jan 22 14:17:22 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54589556
Tue Jan 22 14:17:24 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.24187655
Tue Jan 22 14:17:27 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57041009
Tue Jan 22 14:17:29 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80977299
Tue Jan 22 14:17:31 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.95435949
Tue Jan 22 14:17:33 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.33630546
Tue Jan 22 14:17:35 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,2000,3000,4000,5000,6000,7000,8000,9000,10000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.73402131
Tue Jan 22 14:17:50 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.63437754
Tue Jan 22 14:17:52 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.79199841
Tue Jan 22 14:17:55 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68148504
Tue Jan 22 14:17:57 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.70431979
Tue Jan 22 14:18:00 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.92124449
Tue Jan 22 14:18:02 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5630425
Tue Jan 22 14:18:04 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71835588
Tue Jan 22 14:18:07 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6390968
Tue Jan 22 14:18:09 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.17675791
Tue Jan 22 14:18:11 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.46349795
Tue Jan 22 14:18:13 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47473094
Tue Jan 22 14:18:15 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.98890701
Tue Jan 22 14:18:18 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.3893928
Tue Jan 22 14:18:20 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.3342188
Tue Jan 22 14:18:22 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5197622
Tue Jan 22 14:18:24 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.58768906
Tue Jan 22 14:18:27 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.14127995
Tue Jan 22 14:18:29 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83352766
Tue Jan 22 14:18:31 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.37465771
Tue Jan 22 14:18:33 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.23758682
Tue Jan 22 14:18:36 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.860553
Tue Jan 22 14:18:39 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,23.89192628
Tue Jan 22 14:18:43 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.38331776
Tue Jan 22 14:18:45 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.67745965
Tue Jan 22 14:18:48 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.89646571
Tue Jan 22 14:18:50 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69139651
Tue Jan 22 14:18:52 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.32434022
Tue Jan 22 14:18:55 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.98114296
Tue Jan 22 14:18:57 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60064011
Tue Jan 22 14:18:59 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.13882981
Tue Jan 22 14:19:20 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.47645421
Tue Jan 22 14:19:23 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.64422304
Tue Jan 22 14:19:25 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5790991
Tue Jan 22 14:19:27 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.42272855
Tue Jan 22 14:19:30 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.06059501
Tue Jan 22 14:19:32 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.180293
Tue Jan 22 14:19:34 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.30402168
Tue Jan 22 14:19:36 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63747796
Tue Jan 22 14:19:39 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76500597
Tue Jan 22 14:19:41 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.14993606
Tue Jan 22 14:19:43 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50363945
Tue Jan 22 14:19:45 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.59467609
Tue Jan 22 14:19:48 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55577405
Tue Jan 22 14:19:50 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.08438267
Tue Jan 22 14:19:52 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63460368
Tue Jan 22 14:19:54 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.33669662
Tue Jan 22 14:19:57 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.46696698
Tue Jan 22 14:19:59 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.19816671
Tue Jan 22 14:20:01 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59766669
Tue Jan 22 14:20:03 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.66962433
Tue Jan 22 14:20:06 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87618015
Tue Jan 22 14:20:08 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38255389
Tue Jan 22 14:20:10 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72915941
Tue Jan 22 14:20:12 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.35771435
Tue Jan 22 14:20:14 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.26487129
Tue Jan 22 14:20:17 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.32767713
Tue Jan 22 14:20:19 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,12.96732763
Tue Jan 22 14:20:21 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.45368553
Tue Jan 22 14:20:23 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.8184291
Tue Jan 22 14:20:26 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6337446
Tue Jan 22 14:20:46 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.75499536
Tue Jan 22 14:20:48 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.53612151
Tue Jan 22 14:20:51 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.90561725
Tue Jan 22 14:20:53 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.57236454
Tue Jan 22 14:20:56 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.26640159
Tue Jan 22 14:20:59 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.99394471
Tue Jan 22 14:21:03 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,39.274788
Tue Jan 22 14:21:07 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.01167972
Tue Jan 22 14:21:12 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.5405526
Tue Jan 22 14:21:15 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.78496114
Tue Jan 22 14:21:17 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,23.39608635
Tue Jan 22 14:21:21 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.79570794
Tue Jan 22 14:21:25 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.75319415
Tue Jan 22 14:21:28 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.18819841
Tue Jan 22 14:21:31 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.00306865
Tue Jan 22 14:21:35 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.15045269
Tue Jan 22 14:21:38 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.79133761
Tue Jan 22 14:21:40 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.44278285
Tue Jan 22 14:21:42 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,12.92682265
Tue Jan 22 14:21:44 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.58917586
Tue Jan 22 14:21:47 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.20299562
Tue Jan 22 14:21:49 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.32391608
Tue Jan 22 14:21:51 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.47225833
Tue Jan 22 14:21:53 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.34498926
Tue Jan 22 14:21:56 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.35949309
Tue Jan 22 14:21:58 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.12065877
Tue Jan 22 14:22:00 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,27.67468707
Tue Jan 22 14:22:03 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.30118037
Tue Jan 22 14:22:05 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.54571327
Tue Jan 22 14:22:07 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72582251
Tue Jan 22 14:22:23 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.13321336
Tue Jan 22 14:22:26 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.33382755
Tue Jan 22 14:22:28 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.43472147
Tue Jan 22 14:22:30 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.4786295
Tue Jan 22 14:22:32 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.0699832
Tue Jan 22 14:22:35 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.2001874
Tue Jan 22 14:22:38 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.15597018
Tue Jan 22 14:22:41 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.48645825
Tue Jan 22 14:22:44 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.7377322
Tue Jan 22 14:22:47 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.66358355
Tue Jan 22 14:22:50 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.5346348
Tue Jan 22 14:22:53 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.56651682
Tue Jan 22 14:22:55 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.38427716
Tue Jan 22 14:22:58 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.09433244
Tue Jan 22 14:23:01 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.05221914
Tue Jan 22 14:23:03 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.78735051
Tue Jan 22 14:23:06 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.07721858
Tue Jan 22 14:23:09 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,23.25646627
Tue Jan 22 14:23:12 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.75822655
Tue Jan 22 14:23:14 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.26539987
Tue Jan 22 14:23:17 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.06942154
Tue Jan 22 14:23:20 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,24.8422748
Tue Jan 22 14:23:23 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.73726437
Tue Jan 22 14:23:26 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.83694114
Tue Jan 22 14:23:29 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.55255749
Tue Jan 22 14:23:32 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.40014618
Tue Jan 22 14:23:35 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.6861144
Tue Jan 22 14:23:39 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.76740065
Tue Jan 22 14:23:42 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,26.05068611
Tue Jan 22 14:23:45 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.06619968
Tue Jan 22 14:24:08 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.57143949
Tue Jan 22 14:24:11 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.29480399
Tue Jan 22 14:24:13 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.06165228
Tue Jan 22 14:24:15 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.30108124
Tue Jan 22 14:24:17 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59409852
Tue Jan 22 14:24:20 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.77974115
Tue Jan 22 14:24:22 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68551572
Tue Jan 22 14:24:24 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48401477
Tue Jan 22 14:24:26 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.13053726
Tue Jan 22 14:24:28 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51569844
Tue Jan 22 14:24:31 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.66917761
Tue Jan 22 14:24:33 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48437808
Tue Jan 22 14:24:35 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.28267885
Tue Jan 22 14:24:37 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81783436
Tue Jan 22 14:24:40 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.42953447
Tue Jan 22 14:24:42 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47099758
Tue Jan 22 14:24:44 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38830255
Tue Jan 22 14:24:46 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.28717215
Tue Jan 22 14:24:48 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.95752059
Tue Jan 22 14:24:52 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.64298879
Tue Jan 22 14:24:55 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,30.52986274
Tue Jan 22 14:24:59 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.8731393
Tue Jan 22 14:25:01 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.62981305
Tue Jan 22 14:25:04 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.50328136
Tue Jan 22 14:25:07 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.26321801
Tue Jan 22 14:25:10 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.89247331
Tue Jan 22 14:25:12 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5055557
Tue Jan 22 14:25:15 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.21079266
Tue Jan 22 14:25:17 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.3437774
Tue Jan 22 14:25:19 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.91903613
Tue Jan 22 14:25:38 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61702711
Tue Jan 22 14:25:40 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.78453169
Tue Jan 22 14:25:43 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50767023
Tue Jan 22 14:25:45 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.17709891
Tue Jan 22 14:25:48 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.31101921
Tue Jan 22 14:25:50 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.55392916
Tue Jan 22 14:25:54 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.6649037
Tue Jan 22 14:25:57 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.26831254
Tue Jan 22 14:26:00 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.91135413
Tue Jan 22 14:26:03 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.75337652
Tue Jan 22 14:26:06 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83726094
Tue Jan 22 14:26:08 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74211046
Tue Jan 22 14:26:10 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.58996879
Tue Jan 22 14:26:14 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.41501869
Tue Jan 22 14:26:16 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.68403422
Tue Jan 22 14:26:19 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.13094424
Tue Jan 22 14:26:22 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.4489002
Tue Jan 22 14:26:24 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.64482299
Tue Jan 22 14:26:27 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.05947699
Tue Jan 22 14:26:30 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.00883313
Tue Jan 22 14:26:33 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.51594039
Tue Jan 22 14:26:36 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.3321083
Tue Jan 22 14:26:39 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87307451
Tue Jan 22 14:26:41 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68564785
Tue Jan 22 14:26:43 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.75235764
Tue Jan 22 14:26:46 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67464604
Tue Jan 22 14:26:48 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.40264648
Tue Jan 22 14:26:50 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56733744
Tue Jan 22 14:26:53 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.35900288
Tue Jan 22 14:26:55 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.41252505
Tue Jan 22 14:27:09 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.7569117
Tue Jan 22 14:27:12 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5710708
Tue Jan 22 14:27:14 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.90846924
Tue Jan 22 14:27:17 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.73323369
Tue Jan 22 14:27:19 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.03456079
Tue Jan 22 14:27:22 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.92646448
Tue Jan 22 14:27:24 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.602826
Tue Jan 22 14:27:27 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.89505027
Tue Jan 22 14:27:30 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.97071341
Tue Jan 22 14:27:32 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.73343718
Tue Jan 22 14:27:35 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83035596
Tue Jan 22 14:27:37 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.17540332
Tue Jan 22 14:27:40 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.65360062
Tue Jan 22 14:27:43 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.51838395
Tue Jan 22 14:27:45 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.81051439
Tue Jan 22 14:27:48 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.55477628
Tue Jan 22 14:27:51 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.14550891
Tue Jan 22 14:27:54 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.06612301
Tue Jan 22 14:27:56 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.51365545
Tue Jan 22 14:27:59 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.02006218
Tue Jan 22 14:28:01 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.57890613
Tue Jan 22 14:28:04 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.97510236
Tue Jan 22 14:28:07 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,23.92602179
Tue Jan 22 14:28:10 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,23.26175241
Tue Jan 22 14:28:12 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69400655
Tue Jan 22 14:28:15 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53661181
Tue Jan 22 14:28:17 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.30405466
Tue Jan 22 14:28:19 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.1899733
Tue Jan 22 14:28:21 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63017644
Tue Jan 22 14:28:23 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.40439222
Tue Jan 22 14:28:55 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.7666249
Tue Jan 22 14:28:58 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48100819
Tue Jan 22 14:29:00 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.45850914
Tue Jan 22 14:29:02 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.03608058
Tue Jan 22 14:29:05 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53571975
Tue Jan 22 14:29:07 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.7031304
Tue Jan 22 14:29:10 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.12142922
Tue Jan 22 14:29:12 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.48177334
Tue Jan 22 14:29:15 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.99554774
Tue Jan 22 14:29:17 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.01520566
Tue Jan 22 14:29:20 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.1605691
Tue Jan 22 14:29:22 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.30333849
Tue Jan 22 14:29:24 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.1334777
Tue Jan 22 14:29:27 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56515694
Tue Jan 22 14:29:29 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.46349786
Tue Jan 22 14:29:31 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6277316
Tue Jan 22 14:29:33 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38275216
Tue Jan 22 14:29:35 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.32166413
Tue Jan 22 14:29:38 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.23480629
Tue Jan 22 14:29:40 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.18818918
Tue Jan 22 14:29:42 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.24776264
Tue Jan 22 14:29:45 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.093044
Tue Jan 22 14:29:47 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.8204444
Tue Jan 22 14:29:49 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47089852
Tue Jan 22 14:29:52 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.27607129
Tue Jan 22 14:29:54 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.11759151
Tue Jan 22 14:29:56 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.28602105
Tue Jan 22 14:29:59 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.90625036
Tue Jan 22 14:30:01 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.74347035
Tue Jan 22 14:30:04 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59208323
Tue Jan 22 14:30:29 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.36656856
Tue Jan 22 14:30:31 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.23986646
Tue Jan 22 14:30:34 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.86250754
Tue Jan 22 14:30:37 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.35415013
Tue Jan 22 14:30:40 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.79545018
Tue Jan 22 14:30:43 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74287031
Tue Jan 22 14:30:45 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83273474
Tue Jan 22 14:30:47 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.38867124
Tue Jan 22 14:30:50 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,24.32961851
Tue Jan 22 14:30:53 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.30293673
Tue Jan 22 14:30:55 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81238311
Tue Jan 22 14:30:58 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.17893714
Tue Jan 22 14:31:01 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.43555807
Tue Jan 22 14:31:04 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.47500579
Tue Jan 22 14:31:07 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80253761
Tue Jan 22 14:31:09 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.97137951
Tue Jan 22 14:31:12 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.31781462
Tue Jan 22 14:31:15 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.06378253
Tue Jan 22 14:31:17 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.51322591
Tue Jan 22 14:31:20 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.64187734
Tue Jan 22 14:31:22 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.77138245
Tue Jan 22 14:31:25 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.45244598
Tue Jan 22 14:31:28 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.85490339
Tue Jan 22 14:31:31 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.28735316
Tue Jan 22 14:31:33 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.52598399
Tue Jan 22 14:31:36 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.19497793
Tue Jan 22 14:31:38 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60004546
Tue Jan 22 14:31:41 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56324069
Tue Jan 22 14:31:43 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6533033
Tue Jan 22 14:31:45 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60149919
Tue Jan 22 14:32:13 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.02554659
Tue Jan 22 14:32:15 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50139289
Tue Jan 22 14:32:17 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47638285
Tue Jan 22 14:32:20 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.79130984
Tue Jan 22 14:32:23 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.81387504
Tue Jan 22 14:32:25 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.3878784
Tue Jan 22 14:32:28 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71690215
Tue Jan 22 14:32:30 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.1607396
Tue Jan 22 14:32:32 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.70319125
Tue Jan 22 14:32:35 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.15242449
Tue Jan 22 14:32:37 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.19305108
Tue Jan 22 14:32:40 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.17656502
Tue Jan 22 14:32:43 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.27983764
Tue Jan 22 14:32:45 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49359585
Tue Jan 22 14:32:47 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56882424
Tue Jan 22 14:32:49 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.70028389
Tue Jan 22 14:32:52 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.92246686
Tue Jan 22 14:32:55 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.5424979
Tue Jan 22 14:32:57 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.98421561
Tue Jan 22 14:32:59 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5287817
Tue Jan 22 14:33:02 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.23603405
Tue Jan 22 14:33:04 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.58614689
Tue Jan 22 14:33:07 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.13504629
Tue Jan 22 14:33:09 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.52666726
Tue Jan 22 14:33:12 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.71535467
Tue Jan 22 14:33:15 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.84552059
Tue Jan 22 14:33:17 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.98530586
Tue Jan 22 14:33:20 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.1796587
Tue Jan 22 14:33:23 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.75553985
Tue Jan 22 14:33:25 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.26685351
Tue Jan 22 14:33:41 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.58162069
Tue Jan 22 14:33:43 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.79454239
Tue Jan 22 14:33:46 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76038064
Tue Jan 22 14:33:48 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.03462027
Tue Jan 22 14:33:51 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.3384358
Tue Jan 22 14:33:53 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54946373
Tue Jan 22 14:33:55 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5550142
Tue Jan 22 14:33:58 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38447014
Tue Jan 22 14:34:00 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.98445747
Tue Jan 22 14:34:03 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.7736779
Tue Jan 22 14:34:05 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.92412408
Tue Jan 22 14:34:08 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.30237506
Tue Jan 22 14:34:10 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.13302039
Tue Jan 22 14:34:12 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.24538395
Tue Jan 22 14:34:15 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.00195711
Tue Jan 22 14:34:18 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.58990794
Tue Jan 22 14:34:21 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.60848604
Tue Jan 22 14:34:23 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.82524033
Tue Jan 22 14:34:27 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.84995689
Tue Jan 22 14:34:30 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.62345248
Tue Jan 22 14:34:32 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.55422657
Tue Jan 22 14:34:35 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.07281784
Tue Jan 22 14:34:38 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.34918379
Tue Jan 22 14:34:41 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.44229128
Tue Jan 22 14:34:44 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.94037895
Tue Jan 22 14:34:47 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.4511019
Tue Jan 22 14:34:50 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.84236334
Tue Jan 22 14:34:52 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.23845641
Tue Jan 22 14:34:55 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,24.5853685
Tue Jan 22 14:34:59 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.74466367
Tue Jan 22 14:35:26 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.58167606
Tue Jan 22 14:35:28 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.92048455
Tue Jan 22 14:35:30 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.58365838
Tue Jan 22 14:35:33 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69417184
Tue Jan 22 14:35:35 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76444431
Tue Jan 22 14:35:37 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.13099312
Tue Jan 22 14:35:40 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6703511
Tue Jan 22 14:35:42 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53961831
Tue Jan 22 14:35:44 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.52214098
Tue Jan 22 14:35:47 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.95881441
Tue Jan 22 14:35:49 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.22717975
Tue Jan 22 14:35:51 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.06264869
Tue Jan 22 14:35:53 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63777529
Tue Jan 22 14:35:56 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51067673
Tue Jan 22 14:35:58 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.82252576
Tue Jan 22 14:36:00 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.37965576
Tue Jan 22 14:36:03 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.86643379
Tue Jan 22 14:36:05 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.28841043
Tue Jan 22 14:36:08 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.93615007
Tue Jan 22 14:36:11 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.4236589
Tue Jan 22 14:36:14 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.11041024
Tue Jan 22 14:36:16 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.09886403
Tue Jan 22 14:36:19 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.1611241
Tue Jan 22 14:36:22 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.48706486
Tue Jan 22 14:36:24 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.73067911
Tue Jan 22 14:36:27 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.59340474
Tue Jan 22 14:36:29 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.19058376
Tue Jan 22 14:36:32 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.88176891
Tue Jan 22 14:36:34 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87882317
Tue Jan 22 14:36:36 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.47761053
Tue Jan 22 14:36:56 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61567261
Tue Jan 22 14:36:59 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.52831918
Tue Jan 22 14:37:01 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.45983065
Tue Jan 22 14:37:03 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49158055
Tue Jan 22 14:37:06 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.70471104
Tue Jan 22 14:37:08 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.64322663
Tue Jan 22 14:37:10 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.4386861
Tue Jan 22 14:37:13 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.16704992
Tue Jan 22 14:37:15 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.53123705
Tue Jan 22 14:37:18 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.33415795
Tue Jan 22 14:37:20 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.20670121
Tue Jan 22 14:37:23 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.78007155
Tue Jan 22 14:37:25 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.99416016
Tue Jan 22 14:37:27 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49723007
Tue Jan 22 14:37:29 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.22060518
Tue Jan 22 14:37:31 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.37875446
Tue Jan 22 14:37:34 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.79325378
Tue Jan 22 14:37:36 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48824365
Tue Jan 22 14:37:38 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87066275
Tue Jan 22 14:37:41 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55521239
Tue Jan 22 14:37:43 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.34631607
Tue Jan 22 14:37:45 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71244201
Tue Jan 22 14:37:47 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.20915135
Tue Jan 22 14:37:50 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51011506
Tue Jan 22 14:37:52 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57830626
Tue Jan 22 14:37:54 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.33299642
Tue Jan 22 14:37:57 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.34606234
Tue Jan 22 14:37:59 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.39144647
Tue Jan 22 14:38:02 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.62753341
Tue Jan 22 14:38:04 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.93475711
Tue Jan 22 14:38:23 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.18175733
Tue Jan 22 14:38:25 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63298466
Tue Jan 22 14:38:28 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71630741
Tue Jan 22 14:38:30 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.15092717
Tue Jan 22 14:38:32 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.88777661
Tue Jan 22 14:38:34 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6932467
Tue Jan 22 14:38:37 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72598771
Tue Jan 22 14:38:39 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55432032
Tue Jan 22 14:38:41 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.65145311
Tue Jan 22 14:38:44 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63348035
Tue Jan 22 14:38:46 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47340942
Tue Jan 22 14:38:48 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.25403989
Tue Jan 22 14:38:51 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.07758599
Tue Jan 22 14:38:55 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,28.16441477
Tue Jan 22 14:39:00 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,44.92543904
Tue Jan 22 14:39:03 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.64508605
Tue Jan 22 14:39:06 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.21132134
Tue Jan 22 14:39:09 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.91299014
Tue Jan 22 14:39:11 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87205032
Tue Jan 22 14:39:14 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.44010009
Tue Jan 22 14:39:17 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.27171541
Tue Jan 22 14:39:19 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.02227584
Tue Jan 22 14:39:22 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.62829326
Tue Jan 22 14:39:24 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.99848817
Tue Jan 22 14:39:27 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.13626875
Tue Jan 22 14:39:30 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.38478336
Tue Jan 22 14:39:32 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.30604757
Tue Jan 22 14:39:35 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,26.63761275
Tue Jan 22 14:39:39 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.016169
Tue Jan 22 14:39:41 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.87991873
Tue Jan 22 14:40:00 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.32907539
Tue Jan 22 14:40:02 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.58133388
Tue Jan 22 14:40:06 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.02393826
Tue Jan 22 14:40:08 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.45484184
Tue Jan 22 14:40:11 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5597056
Tue Jan 22 14:40:13 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.465249
Tue Jan 22 14:40:15 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.92970233
Tue Jan 22 14:40:17 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5057209
Tue Jan 22 14:40:20 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.41555915
Tue Jan 22 14:40:22 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67973399
Tue Jan 22 14:40:25 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,23.76519101
Tue Jan 22 14:40:27 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.39078567
Tue Jan 22 14:40:31 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.33894858
Tue Jan 22 14:40:35 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.64891325
Tue Jan 22 14:40:38 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.66146903
Tue Jan 22 14:40:41 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.5875055
Tue Jan 22 14:40:45 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,25.4688805
Tue Jan 22 14:40:48 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.66679354
Tue Jan 22 14:40:52 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,34.5060632
Tue Jan 22 14:40:56 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.81236055
Tue Jan 22 14:40:59 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.12008524
Tue Jan 22 14:41:01 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.82316409
Tue Jan 22 14:41:03 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61074986
Tue Jan 22 14:41:06 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.23451418
Tue Jan 22 14:41:08 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.56826787
Tue Jan 22 14:41:10 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47819996
Tue Jan 22 14:41:13 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.56827839
Tue Jan 22 14:41:16 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.97313586
Tue Jan 22 14:41:18 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.3709905
Tue Jan 22 14:41:20 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87584975
Tue Jan 22 14:41:38 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50885952
Tue Jan 22 14:41:40 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.43937989
Tue Jan 22 14:41:42 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.31981402
Tue Jan 22 14:41:45 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5448383
Tue Jan 22 14:41:47 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.41235455
Tue Jan 22 14:41:49 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74861898
Tue Jan 22 14:41:51 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.09016962
Tue Jan 22 14:41:54 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69873102
Tue Jan 22 14:41:56 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50876047
Tue Jan 22 14:41:58 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.75648208
Tue Jan 22 14:42:00 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.52676631
Tue Jan 22 14:42:03 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.41539404
Tue Jan 22 14:42:05 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.82193111
Tue Jan 22 14:42:07 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6307381
Tue Jan 22 14:42:09 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54292205
Tue Jan 22 14:42:12 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.64841362
Tue Jan 22 14:42:14 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67064843
Tue Jan 22 14:42:16 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.82150158
Tue Jan 22 14:42:18 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51064365
Tue Jan 22 14:42:21 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.34016565
Tue Jan 22 14:42:23 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61484661
Tue Jan 22 14:42:25 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61111325
Tue Jan 22 14:42:27 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51645846
Tue Jan 22 14:42:30 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.84271219
Tue Jan 22 14:42:32 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.89656476
Tue Jan 22 14:42:34 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55762415
Tue Jan 22 14:42:36 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68508619
Tue Jan 22 14:42:39 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83270166
Tue Jan 22 14:42:41 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53066496
Tue Jan 22 14:42:43 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.0103159
Tue Jan 22 14:43:14 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.86398904
Tue Jan 22 14:43:17 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74564555
Tue Jan 22 14:43:19 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81281256
Tue Jan 22 14:43:22 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.95504267
Tue Jan 22 14:43:24 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.38460756
Tue Jan 22 14:43:27 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.34565006
Tue Jan 22 14:43:29 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.06493354
Tue Jan 22 14:43:31 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47436755
Tue Jan 22 14:43:33 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50129375
Tue Jan 22 14:43:36 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56063074
Tue Jan 22 14:43:38 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5859381
Tue Jan 22 14:43:40 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.44978696
Tue Jan 22 14:43:42 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87072881
Tue Jan 22 14:43:45 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.65951457
Tue Jan 22 14:43:47 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.5067174
Tue Jan 22 14:43:49 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.7218355
Tue Jan 22 14:43:52 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.43729844
Tue Jan 22 14:43:54 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72625196
Tue Jan 22 14:43:56 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.8007205
Tue Jan 22 14:43:58 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.2052145
Tue Jan 22 14:44:01 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.75456591
Tue Jan 22 14:44:03 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.77595763
Tue Jan 22 14:44:06 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.63475683
Tue Jan 22 14:44:08 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.90908636
Tue Jan 22 14:44:10 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.7478922
Tue Jan 22 14:44:12 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47816689
Tue Jan 22 14:44:14 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.04860739
Tue Jan 22 14:44:17 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61441716
Tue Jan 22 14:44:19 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63704842
Tue Jan 22 14:44:21 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.98266275
Tue Jan 22 14:44:47 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63196048
Tue Jan 22 14:44:49 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.47694451
Tue Jan 22 14:44:52 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54962892
Tue Jan 22 14:44:54 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48830971
Tue Jan 22 14:44:56 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74369623
Tue Jan 22 14:44:59 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.50618881
Tue Jan 22 14:45:01 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.16903754
Tue Jan 22 14:45:04 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.14167111
Tue Jan 22 14:45:06 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68158418
Tue Jan 22 14:45:08 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61491276
Tue Jan 22 14:45:10 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.06899209
Tue Jan 22 14:45:13 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.22698147
Tue Jan 22 14:45:15 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71554756
Tue Jan 22 14:45:17 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.92018723
Tue Jan 22 14:45:20 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.25625346
Tue Jan 22 14:45:22 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.84846094
Tue Jan 22 14:45:24 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68624259
Tue Jan 22 14:45:26 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57546496
Tue Jan 22 14:45:29 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.4572536
Tue Jan 22 14:45:31 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.64471334
Tue Jan 22 14:45:33 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81076419
Tue Jan 22 14:45:35 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6989293
Tue Jan 22 14:45:38 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.73338829
Tue Jan 22 14:45:40 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60810684
Tue Jan 22 14:45:42 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.53242122
Tue Jan 22 14:45:44 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.18406465
Tue Jan 22 14:45:47 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.62525369
Tue Jan 22 14:45:49 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67031803
Tue Jan 22 14:45:51 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38579165
Tue Jan 22 14:45:54 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.303135
Tue Jan 22 14:46:11 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5456643
Tue Jan 22 14:46:13 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53667788
Tue Jan 22 14:46:16 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.79929985
Tue Jan 22 14:46:18 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.43379642
Tue Jan 22 14:46:20 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.70933638
Tue Jan 22 14:46:23 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.24392492
Tue Jan 22 14:46:25 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.72060774
Tue Jan 22 14:46:28 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,27.06354341
Tue Jan 22 14:46:33 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,38.0147047
Tue Jan 22 14:46:38 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,39.30359746
Tue Jan 22 14:46:43 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.57419755
Tue Jan 22 14:46:46 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.43778216
Tue Jan 22 14:46:49 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.98403196
Tue Jan 22 14:46:52 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.85247445
Tue Jan 22 14:46:55 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.77110624
Tue Jan 22 14:46:59 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.45002746
Tue Jan 22 14:47:01 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.6070218
Tue Jan 22 14:47:04 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.17071056
Tue Jan 22 14:47:07 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.88794045
Tue Jan 22 14:47:09 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.76471404
Tue Jan 22 14:47:12 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.32511076
Tue Jan 22 14:47:15 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.87717656
Tue Jan 22 14:47:17 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.60077763
Tue Jan 22 14:47:19 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56502481
Tue Jan 22 14:47:22 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.90998894
Tue Jan 22 14:47:24 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.95973946
Tue Jan 22 14:47:27 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57209508
Tue Jan 22 14:47:29 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.27869714
Tue Jan 22 14:47:31 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50469671
Tue Jan 22 14:47:33 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.12832899
Tue Jan 22 14:47:52 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.03497306
Tue Jan 22 14:47:54 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.86369163
Tue Jan 22 14:47:57 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.78675056
Tue Jan 22 14:47:59 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.99947929
Tue Jan 22 14:48:01 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.90029812
Tue Jan 22 14:48:04 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.69408321
Tue Jan 22 14:48:06 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.17739624
Tue Jan 22 14:48:09 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.98481556
Tue Jan 22 14:48:12 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.4213132
Tue Jan 22 14:48:15 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.0554781
Tue Jan 22 14:48:18 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,22.89895808
Tue Jan 22 14:48:21 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.97057599
Tue Jan 22 14:48:24 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.43013442
Tue Jan 22 14:48:26 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.58382888
Tue Jan 22 14:48:29 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.5969782
Tue Jan 22 14:48:32 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,30.16379756
Tue Jan 22 14:48:35 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.66639708
Tue Jan 22 14:48:37 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.3118623
Tue Jan 22 14:48:40 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.12906106
Tue Jan 22 14:48:43 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.85078416
Tue Jan 22 14:48:45 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.06172885
Tue Jan 22 14:48:47 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6274012
Tue Jan 22 14:48:50 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.75909211
Tue Jan 22 14:48:52 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.29943463
Tue Jan 22 14:48:55 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.18343692
Tue Jan 22 14:48:58 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.12077903
Tue Jan 22 14:49:00 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.8480314
Tue Jan 22 14:49:03 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.15092717
Tue Jan 22 14:49:05 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53320885
Tue Jan 22 14:49:07 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.94721795
Tue Jan 22 14:49:26 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71389565
Tue Jan 22 14:49:28 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,19.18075425
Tue Jan 22 14:49:31 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,20.1163347
Tue Jan 22 14:49:34 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.5201138
Tue Jan 22 14:49:37 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.14341559
Tue Jan 22 14:49:40 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.19096971
Tue Jan 22 14:49:42 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.44292027
Tue Jan 22 14:49:45 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.76933938
Tue Jan 22 14:49:48 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.78790688
Tue Jan 22 14:49:51 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.97645156
Tue Jan 22 14:49:53 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.73347025
Tue Jan 22 14:49:56 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.52915047
Tue Jan 22 14:49:59 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.53513031
Tue Jan 22 14:50:01 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.1487136
Tue Jan 22 14:50:04 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.45874561
Tue Jan 22 14:50:06 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.13113721
Tue Jan 22 14:50:09 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.42672616
Tue Jan 22 14:50:11 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.10269114
Tue Jan 22 14:50:14 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,21.29953779
Tue Jan 22 14:50:17 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.35302816
Tue Jan 22 14:50:20 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.91146514
Tue Jan 22 14:50:22 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.55695156
Tue Jan 22 14:50:25 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.578075
Tue Jan 22 14:50:27 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68852223
Tue Jan 22 14:50:29 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.34684475
Tue Jan 22 14:50:31 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49917931
Tue Jan 22 14:50:34 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76120655
Tue Jan 22 14:50:36 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80617184
Tue Jan 22 14:50:38 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.78010462
Tue Jan 22 14:50:40 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.39134204
Tue Jan 22 14:50:59 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.0557767
Tue Jan 22 14:51:02 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.26021809
Tue Jan 22 14:51:05 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.92253822
Tue Jan 22 14:51:07 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.91516534
Tue Jan 22 14:51:09 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6568054
Tue Jan 22 14:51:12 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60562892
Tue Jan 22 14:51:14 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.78710865
Tue Jan 22 14:51:17 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.24908415
Tue Jan 22 14:51:19 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53205254
Tue Jan 22 14:51:21 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.344758
Tue Jan 22 14:51:24 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80514765
Tue Jan 22 14:51:26 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.67167791
Tue Jan 22 14:51:28 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.18740155
Tue Jan 22 14:51:31 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.99673713
Tue Jan 22 14:51:33 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.10375891
Tue Jan 22 14:51:36 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.3280459
Tue Jan 22 14:51:38 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.26494265
Tue Jan 22 14:51:40 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.70474941
Tue Jan 22 14:51:43 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.21445996
Tue Jan 22 14:51:45 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.50311616
Tue Jan 22 14:51:47 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.50817104
Tue Jan 22 14:51:50 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.35212559
Tue Jan 22 14:51:52 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63784135
Tue Jan 22 14:51:54 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.7691358
Tue Jan 22 14:51:57 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.57653274
Tue Jan 22 14:51:59 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.23550546
Tue Jan 22 14:52:02 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.17943931
Tue Jan 22 14:52:04 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.45613566
Tue Jan 22 14:52:06 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71485378
Tue Jan 22 14:52:09 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.3305621
Tue Jan 22 14:53:07 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54744842
Tue Jan 22 14:53:09 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.15893309
Tue Jan 22 14:53:12 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.31958806
Tue Jan 22 14:53:15 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.72434101
Tue Jan 22 14:53:17 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.84291055
Tue Jan 22 14:53:20 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81773531
Tue Jan 22 14:53:22 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48242884
Tue Jan 22 14:53:24 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.94116666
Tue Jan 22 14:53:26 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68013045
Tue Jan 22 14:53:29 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.70583436
Tue Jan 22 14:53:31 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69783896
Tue Jan 22 14:53:33 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76308981
Tue Jan 22 14:53:35 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.65383189
Tue Jan 22 14:53:38 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.15231484
Tue Jan 22 14:53:40 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53756985
Tue Jan 22 14:53:42 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74207739
Tue Jan 22 14:53:45 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.86185204
Tue Jan 22 14:53:50 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,46.91236637
Tue Jan 22 14:53:55 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,30.73988767
Tue Jan 22 14:53:59 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,18.46203756
Tue Jan 22 14:54:02 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.10038372
Tue Jan 22 14:54:05 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.89471466
Tue Jan 22 14:54:07 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81687624
Tue Jan 22 14:54:10 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.78704789
Tue Jan 22 14:54:12 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57622481
Tue Jan 22 14:54:14 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.03535901
Tue Jan 22 14:54:16 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.39563706
Tue Jan 22 14:54:19 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61910865
Tue Jan 22 14:54:21 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57163246
Tue Jan 22 14:54:23 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.91414654
Tue Jan 22 14:54:40 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.40997569
Tue Jan 22 14:54:42 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.95022445
Tue Jan 22 14:54:44 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54685369
Tue Jan 22 14:54:47 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.51964598
Tue Jan 22 14:54:50 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.36128781
Tue Jan 22 14:54:52 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67550511
Tue Jan 22 14:54:55 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.72760664
Tue Jan 22 14:54:57 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.71241954
Tue Jan 22 14:55:00 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.87991351
Tue Jan 22 14:55:02 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.49515914
Tue Jan 22 14:55:04 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.82582968
Tue Jan 22 14:55:07 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48589795
Tue Jan 22 14:55:09 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.74915816
Tue Jan 22 14:55:12 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.69871394
Tue Jan 22 14:55:14 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.22285165
Tue Jan 22 14:55:17 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.67590158
Tue Jan 22 14:55:19 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49762654
Tue Jan 22 14:55:21 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.65905205
Tue Jan 22 14:55:23 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80726209
Tue Jan 22 14:55:26 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.57344957
Tue Jan 22 14:55:28 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.60034287
Tue Jan 22 14:55:30 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.37776326
Tue Jan 22 14:55:32 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.80716825
Tue Jan 22 14:55:35 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.56654451
Tue Jan 22 14:55:37 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83858254
Tue Jan 22 14:55:39 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63648676
Tue Jan 22 14:55:42 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.5070425
Tue Jan 22 14:55:44 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.77108512
Tue Jan 22 14:55:46 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.99386284
Tue Jan 22 14:55:48 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.45771613
Tue Jan 22 14:56:10 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.53899059
Tue Jan 22 14:56:12 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.78294584
Tue Jan 22 14:56:15 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.63874393
Tue Jan 22 14:56:17 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.29850957
Tue Jan 22 14:56:20 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.36248771
Tue Jan 22 14:56:22 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68098944
Tue Jan 22 14:56:25 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63546266
Tue Jan 22 14:56:27 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.74742959
Tue Jan 22 14:56:30 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.32877797
Tue Jan 22 14:56:33 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,17.22841802
Tue Jan 22 14:56:35 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.90997834
Tue Jan 22 14:56:38 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.40551555
Tue Jan 22 14:56:40 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.49891498
Tue Jan 22 14:56:42 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.28952315
Tue Jan 22 14:56:44 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.40052682
Tue Jan 22 14:56:47 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.76893761
Tue Jan 22 14:56:49 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.4791633
Tue Jan 22 14:56:51 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,16.2037001
Tue Jan 22 14:56:54 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6252207
Tue Jan 22 14:56:56 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.44043715
Tue Jan 22 14:56:58 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.82130347
Tue Jan 22 14:57:00 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.64960301
Tue Jan 22 14:57:03 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.80683264
Tue Jan 22 14:57:05 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61676286
Tue Jan 22 14:57:07 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6362555
Tue Jan 22 14:57:09 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.55025665
Tue Jan 22 14:57:12 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.54734929
Tue Jan 22 14:57:14 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.7609423
Tue Jan 22 14:57:16 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.16530417
Tue Jan 22 14:57:18 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.89907575
Tue Jan 22 14:57:35 GMT 2019,1,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.51883715
Tue Jan 22 14:57:37 GMT 2019,2,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.68848915
Tue Jan 22 14:57:40 GMT 2019,3,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.38159585
Tue Jan 22 14:57:42 GMT 2019,4,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48963123
Tue Jan 22 14:57:44 GMT 2019,5,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.33385533
Tue Jan 22 14:57:47 GMT 2019,6,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.83921026
Tue Jan 22 14:57:49 GMT 2019,7,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.40112148
Tue Jan 22 14:57:51 GMT 2019,8,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50324307
Tue Jan 22 14:57:53 GMT 2019,9,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.98917135
Tue Jan 22 14:57:56 GMT 2019,10,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.81667805
Tue Jan 22 14:57:58 GMT 2019,11,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69602194
Tue Jan 22 14:58:00 GMT 2019,12,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.36762061
Tue Jan 22 14:58:02 GMT 2019,13,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.66665081
Tue Jan 22 14:58:05 GMT 2019,14,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.44099881
Tue Jan 22 14:58:07 GMT 2019,15,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.61927376
Tue Jan 22 14:58:09 GMT 2019,16,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.93955825
Tue Jan 22 14:58:11 GMT 2019,17,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.88262269
Tue Jan 22 14:58:14 GMT 2019,18,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.50089738
Tue Jan 22 14:58:16 GMT 2019,19,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.66552749
Tue Jan 22 14:58:18 GMT 2019,20,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.71805855
Tue Jan 22 14:58:20 GMT 2019,21,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.06182269
Tue Jan 22 14:58:23 GMT 2019,22,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.3554677
Tue Jan 22 14:58:25 GMT 2019,23,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.69331276
Tue Jan 22 14:58:27 GMT 2019,24,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.621223
Tue Jan 22 14:58:29 GMT 2019,25,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,14.60388317
Tue Jan 22 14:58:32 GMT 2019,26,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.48343064
Tue Jan 22 14:58:34 GMT 2019,27,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.48351909
Tue Jan 22 14:58:36 GMT 2019,28,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.63159709
Tue Jan 22 14:58:38 GMT 2019,29,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,13.6390968
Tue Jan 22 14:58:41 GMT 2019,30,[NoEditEdit{}],"import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};

        bubbleSort(array, array.length);

      }
}",1.54817E+12,TRUE,FALSE,15.15146106
