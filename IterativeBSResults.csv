"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:35 GMT 2019","1","[InsertLineEdit{lineNumber=1, lineContents='//this is a comment'}]","import java.util.Arrays;
//this is a comment

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950150789","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:37 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950155286","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:39 GMT 2019","3","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950157398","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:41 GMT 2019","4","[InsertLineEdit{lineNumber=2, lineContents='//this is a comment'}]","import java.util.Arrays;

//this is a comment
public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950159452","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:43 GMT 2019","5","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950161566","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:45 GMT 2019","6","[InsertLineEdit{lineNumber=5, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
//this is a comment
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950163649","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:47 GMT 2019","7","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950165755","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:49 GMT 2019","8","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950167842","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:51 GMT 2019","9","[InsertLineEdit{lineNumber=29, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);
//this is a comment

      }
}","1546950169847","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:54 GMT 2019","10","[InsertLineEdit{lineNumber=26, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
//this is a comment
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950171962","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:56 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950174169","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:22:58 GMT 2019","12","[InsertLineEdit{lineNumber=16, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
//this is a comment

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950176175","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:00 GMT 2019","13","[InsertLineEdit{lineNumber=3, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {
//this is a comment

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950178230","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:02 GMT 2019","14","[InsertLineEdit{lineNumber=30, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

//this is a comment
      }
}","1546950180263","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:04 GMT 2019","15","[InsertLineEdit{lineNumber=18, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }
//this is a comment

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950182303","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:06 GMT 2019","16","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950184333","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:08 GMT 2019","17","[InsertLineEdit{lineNumber=30, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

//this is a comment
      }
}","1546950186488","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:10 GMT 2019","18","[InsertLineEdit{lineNumber=5, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
//this is a comment
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950188582","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:12 GMT 2019","19","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950190567","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:14 GMT 2019","20","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950192615","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:16 GMT 2019","21","[InsertLineEdit{lineNumber=4, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

//this is a comment
    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950194734","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:18 GMT 2019","22","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950196820","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:20 GMT 2019","23","[InsertLineEdit{lineNumber=16, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
//this is a comment

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950198887","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:22 GMT 2019","24","[InsertLineEdit{lineNumber=29, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);
//this is a comment

      }
}","1546950200890","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:25 GMT 2019","25","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950203057","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:27 GMT 2019","26","[InsertLineEdit{lineNumber=24, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }
//this is a comment

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950205088","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:29 GMT 2019","27","[InsertLineEdit{lineNumber=11, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
//this is a comment
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950207172","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:31 GMT 2019","28","[InsertLineEdit{lineNumber=13, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
//this is a comment
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950209205","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:34 GMT 2019","29","[InsertLineEdit{lineNumber=27, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
//this is a comment

        bubbleSort(array, array.length);

      }
}","1546950211393","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:23:36 GMT 2019","30","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};

        bubbleSort(array, array.length);

      }
}","1546950214349","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:03 GMT 2019","1","[InsertLineEdit{lineNumber=21, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
//this is a comment
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950301415","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:05 GMT 2019","2","[InsertLineEdit{lineNumber=2, lineContents='//this is a comment'}]","import java.util.Arrays;

//this is a comment
public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950303546","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:07 GMT 2019","3","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950305643","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:09 GMT 2019","4","[InsertLineEdit{lineNumber=24, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }
//this is a comment

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950307715","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:11 GMT 2019","5","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950309739","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:13 GMT 2019","6","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950311831","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:16 GMT 2019","7","[InsertLineEdit{lineNumber=24, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }
//this is a comment

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950314035","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:18 GMT 2019","8","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950316350","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:20 GMT 2019","9","[InsertLineEdit{lineNumber=16, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
//this is a comment

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950318607","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:23 GMT 2019","10","[InsertLineEdit{lineNumber=17, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

//this is a comment
            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950320755","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:25 GMT 2019","11","[InsertLineEdit{lineNumber=16, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
//this is a comment

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950323130","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:27 GMT 2019","12","[InsertLineEdit{lineNumber=21, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
//this is a comment
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950325440","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:29 GMT 2019","13","[InsertLineEdit{lineNumber=0, lineContents='//this is a comment'}]","//this is a comment
import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950327878","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:32 GMT 2019","14","[InsertLineEdit{lineNumber=29, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);
//this is a comment

      }
}","1546950330042","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:34 GMT 2019","15","[InsertLineEdit{lineNumber=22, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());
//this is a comment

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950332202","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:36 GMT 2019","16","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950334297","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:39 GMT 2019","17","[InsertLineEdit{lineNumber=26, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
//this is a comment
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950336970","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:41 GMT 2019","18","[InsertLineEdit{lineNumber=12, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
//this is a comment
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950339262","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:44 GMT 2019","19","[InsertLineEdit{lineNumber=17, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

//this is a comment
            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950341864","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:49 GMT 2019","20","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950345048","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:54 GMT 2019","21","[InsertLineEdit{lineNumber=9, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

//this is a comment
        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950349671","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:57 GMT 2019","22","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950354224","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:25:59 GMT 2019","23","[InsertLineEdit{lineNumber=1, lineContents='//this is a comment'}]","import java.util.Arrays;
//this is a comment

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950357337","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:01 GMT 2019","24","[InsertLineEdit{lineNumber=9, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

//this is a comment
        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950359550","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:04 GMT 2019","25","[InsertLineEdit{lineNumber=27, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
//this is a comment
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950361986","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:06 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950364176","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:08 GMT 2019","27","[InsertLineEdit{lineNumber=10, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
//this is a comment
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950366164","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:10 GMT 2019","28","[InsertLineEdit{lineNumber=21, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
//this is a comment
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950368322","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:12 GMT 2019","29","[InsertLineEdit{lineNumber=13, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
//this is a comment
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950370527","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:15 GMT 2019","30","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1,2,3,4,5,6,7,8,9,10};
        bubbleSort(array, array.length);

      }
}","1546950372895","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:26:58 GMT 2019","1","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950416471","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:01 GMT 2019","2","[InsertLineEdit{lineNumber=21, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
//this is a comment
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950418777","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:03 GMT 2019","3","[InsertLineEdit{lineNumber=15, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
//this is a comment
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950421151","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:05 GMT 2019","4","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950423611","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:09 GMT 2019","5","[InsertLineEdit{lineNumber=22, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());
//this is a comment

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950426016","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:12 GMT 2019","6","[InsertLineEdit{lineNumber=7, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
//this is a comment
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950429728","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:16 GMT 2019","7","[InsertLineEdit{lineNumber=3, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {
//this is a comment

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950433158","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:20 GMT 2019","8","[InsertLineEdit{lineNumber=30, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

//this is a comment
      }
}","1546950436553","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:24 GMT 2019","9","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950440922","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:27 GMT 2019","10","[InsertLineEdit{lineNumber=9, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

//this is a comment
        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950444348","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:30 GMT 2019","11","[InsertLineEdit{lineNumber=22, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());
//this is a comment

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950447257","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:33 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950450666","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:37 GMT 2019","13","[InsertLineEdit{lineNumber=31, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
//this is a comment
}","1546950453673","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:39 GMT 2019","14","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950457151","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:42 GMT 2019","15","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950459703","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:44 GMT 2019","16","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950462198","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:47 GMT 2019","17","[InsertLineEdit{lineNumber=20, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
//this is a comment
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950464889","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:49 GMT 2019","18","[InsertLineEdit{lineNumber=22, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());
//this is a comment

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950467473","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:52 GMT 2019","19","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950469897","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:55 GMT 2019","20","[InsertLineEdit{lineNumber=27, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
//this is a comment
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950472606","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:27:58 GMT 2019","21","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950475561","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:01 GMT 2019","22","[InsertLineEdit{lineNumber=3, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {
//this is a comment

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950478314","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:03 GMT 2019","23","[InsertLineEdit{lineNumber=7, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
//this is a comment
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950481296","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:06 GMT 2019","24","[InsertLineEdit{lineNumber=9, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

//this is a comment
        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950483899","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:10 GMT 2019","25","[InsertLineEdit{lineNumber=5, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
//this is a comment
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950486853","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:12 GMT 2019","26","[InsertLineEdit{lineNumber=9, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

//this is a comment
        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950490270","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:15 GMT 2019","27","[InsertLineEdit{lineNumber=18, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }
//this is a comment

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950492807","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:18 GMT 2019","28","[InsertLineEdit{lineNumber=9, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

//this is a comment
        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950495687","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:21 GMT 2019","29","[InsertLineEdit{lineNumber=1, lineContents='//this is a comment'}]","import java.util.Arrays;
//this is a comment

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950499052","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:24 GMT 2019","30","[InsertLineEdit{lineNumber=18, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }
//this is a comment

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,20,30,40,50,60,70,80,90,100};
        bubbleSort(array, array.length);

      }
}","1546950501720","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:28:59 GMT 2019","1","[InsertLineEdit{lineNumber=5, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
//this is a comment
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950537531","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:01 GMT 2019","2","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950539803","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:04 GMT 2019","3","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950542001","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:06 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950544200","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:08 GMT 2019","5","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950546314","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:10 GMT 2019","6","[InsertLineEdit{lineNumber=12, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
//this is a comment
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950548680","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:12 GMT 2019","7","[InsertLineEdit{lineNumber=16, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
//this is a comment

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950550756","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:14 GMT 2019","8","[InsertLineEdit{lineNumber=30, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

//this is a comment
      }
}","1546950552746","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:16 GMT 2019","9","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950554816","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:18 GMT 2019","10","[InsertLineEdit{lineNumber=10, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
//this is a comment
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950556859","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:20 GMT 2019","11","[InsertLineEdit{lineNumber=11, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
//this is a comment
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950558911","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:23 GMT 2019","12","[InsertLineEdit{lineNumber=19, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

//this is a comment
        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950561036","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:25 GMT 2019","13","[InsertLineEdit{lineNumber=23, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

//this is a comment
    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950563072","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:27 GMT 2019","14","[InsertLineEdit{lineNumber=8, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }
//this is a comment

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950565477","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:29 GMT 2019","15","[InsertLineEdit{lineNumber=20, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
//this is a comment
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950567667","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:32 GMT 2019","16","[InsertLineEdit{lineNumber=11, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
//this is a comment
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950569919","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:34 GMT 2019","17","[InsertLineEdit{lineNumber=24, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }
//this is a comment

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950572093","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:36 GMT 2019","18","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950574235","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:38 GMT 2019","19","[InsertLineEdit{lineNumber=25, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

//this is a comment
    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950576593","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:40 GMT 2019","20","[InsertLineEdit{lineNumber=13, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
//this is a comment
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950578651","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:43 GMT 2019","21","[InsertLineEdit{lineNumber=11, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
//this is a comment
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950580972","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:45 GMT 2019","22","[InsertLineEdit{lineNumber=26, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
//this is a comment
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950583362","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:47 GMT 2019","23","[InsertLineEdit{lineNumber=13, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
//this is a comment
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950585678","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:49 GMT 2019","24","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950587808","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:51 GMT 2019","25","[InsertLineEdit{lineNumber=13, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
//this is a comment
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950589844","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:54 GMT 2019","26","[InsertLineEdit{lineNumber=13, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
//this is a comment
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950592065","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:56 GMT 2019","27","[InsertLineEdit{lineNumber=14, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
//this is a comment
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950594270","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:29:58 GMT 2019","28","[InsertLineEdit{lineNumber=0, lineContents='//this is a comment'}]","//this is a comment
import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950596306","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:30:00 GMT 2019","29","[InsertLineEdit{lineNumber=18, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }
//this is a comment

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950598433","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:30:02 GMT 2019","30","[InsertLineEdit{lineNumber=18, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }
//this is a comment

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950600654","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:29 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950687008","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:31 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950689299","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:33 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950691435","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:35 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950693609","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:37 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950695699","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:39 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950697703","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:41 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950699723","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:43 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950701775","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:45 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950703748","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:48 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950705918","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:50 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950708108","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:52 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950710476","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:55 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950712881","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:31:58 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950715735","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:01 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950718642","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:03 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950721195","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:05 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950723215","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:09 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950725881","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:12 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950729455","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:14 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950732512","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:17 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950735001","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:20 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950737812","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:22 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950740155","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:25 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950742645","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:27 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950745185","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:30 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950747963","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:32 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950750553","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:35 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950752858","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:37 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950755257","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:32:39 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,200,300,400,500,600,700,800,900,1000};
        bubbleSort(array, array.length);

      }
}","1546950757409","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:08 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950786677","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:11 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950789029","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:14 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950791716","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:17 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950794534","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:19 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950797110","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:21 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950799661","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:23 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950801828","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:26 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950803986","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:28 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950806107","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:30 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950808227","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:32 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950810285","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:34 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950812406","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:36 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950814427","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:38 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950816432","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:40 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950818484","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:42 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950820542","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:44 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950822531","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:46 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950824536","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:48 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950826525","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:50 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950828623","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:53 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950830634","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:56 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950833314","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:33:59 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950836748","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:02 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950839383","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:06 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950842288","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:09 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950846236","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:11 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950849405","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:13 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950851639","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:16 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950853909","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:18 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {63,64,65,66,67};
        bubbleSort(array, array.length);

      }
}","1546950856317","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:36 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950873929","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:38 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950876319","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:41 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950878994","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:43 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950881384","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:45 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950883516","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:47 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950885753","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:49 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950888012","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:51 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950890063","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:53 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950892068","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:55 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950894041","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:34:58 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950896049","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:00 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950898101","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:02 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950900160","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:04 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950902243","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:06 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950904285","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:08 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950906321","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:10 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950908326","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:12 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950910392","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:14 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950912820","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:16 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950914841","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:18 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950916862","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:20 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950918897","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:22 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950920953","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:25 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950922995","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:27 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950925249","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:29 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950927407","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:31 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950929511","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:33 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950931547","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:35 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950933714","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:35:37 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8001,8002,8003,8004,8005};
        bubbleSort(array, array.length);

      }
}","1546950935847","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:36:51 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951009855","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:36:53 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951011960","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:36:56 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951014081","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:36:58 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951016251","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:00 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951018410","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:02 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951020615","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:04 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951022851","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:07 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951025025","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:09 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951027177","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:11 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951029312","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:13 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951031455","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:15 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951033544","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:17 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951035680","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:19 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951037816","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:22 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951040037","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:24 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951042146","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:26 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951044213","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:28 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951046272","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:30 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951048246","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:32 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951050280","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:34 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951052316","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:36 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951054336","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:38 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951056432","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:40 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951058454","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:42 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951060482","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:44 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951062555","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:46 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951064629","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:48 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951066680","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:50 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951068830","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:37:52 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,17,19,21,23,25,27,29};
        bubbleSort(array, array.length);

      }
}","1546951070819","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:38:48 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951126274","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:38:50 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951128410","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:38:52 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951130616","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:38:54 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951132820","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:38:57 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951134956","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:38:59 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951137161","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:01 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951139219","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:03 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951141340","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:05 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951143499","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:07 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951145498","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:09 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951147525","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:11 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951149630","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:13 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951151650","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:15 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951153792","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:17 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951155897","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:20 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951158002","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:22 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951160091","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:24 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951162165","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:26 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951164348","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:28 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951166676","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:30 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951168758","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:32 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951171001","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:35 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951173027","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:37 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951175085","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:39 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951177137","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:41 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951179126","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:43 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951181231","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:45 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951183280","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:47 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951185432","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:39:49 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204};
        bubbleSort(array, array.length);

      }
}","1546951187422","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:27 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951225084","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:29 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951227458","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:32 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951229857","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:34 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951232146","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:36 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951234444","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:38 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951236518","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:40 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951238569","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:42 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951240642","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:44 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951242716","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:47 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951245004","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:49 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951247210","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:51 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951249229","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:53 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951251303","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:55 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951253323","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:57 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951255328","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:40:59 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951257398","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:01 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951259503","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:03 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951261885","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:06 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951264043","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:08 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951266093","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:10 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951268300","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:12 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951270305","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:14 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951272347","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:16 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951274383","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:18 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951276419","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:20 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951278579","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:22 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951280626","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:24 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951282650","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:26 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951284786","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:41:28 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35};
        bubbleSort(array, array.length);

      }
}","1546951286822","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:00 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951318128","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:02 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951320283","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:04 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951322388","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:07 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951324725","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:09 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951327448","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:11 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951329784","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:14 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951332042","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:16 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951334247","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:19 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951336775","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:21 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951339180","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:23 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951341555","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:25 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951343629","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:27 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951345712","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:29 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951347755","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:31 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951349775","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:33 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951351864","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:36 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951353916","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:38 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951356116","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:40 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951358189","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:42 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951360279","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:44 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951362313","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:46 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951364386","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:48 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951366426","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:50 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951368446","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:52 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951370504","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:54 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951372587","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:56 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951374592","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:42:58 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951376637","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:00 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951378710","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:02 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218};
        bubbleSort(array, array.length);

      }
}","1546951380785","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:27 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951404912","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:29 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951407286","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:31 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951409709","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:34 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951412015","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:36 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951414189","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:38 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951416226","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:40 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951418284","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:42 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951420354","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:44 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951422443","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:46 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951424395","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:48 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951426460","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:50 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951428566","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:52 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951430756","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:55 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951432923","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:57 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951435197","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:43:59 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951437286","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:01 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951439339","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:03 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951441281","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:05 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951443340","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:07 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951445367","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:09 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951447418","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:11 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951449461","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:13 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951451467","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:15 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951453511","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:17 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951455594","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:19 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951457592","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:21 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951459668","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:23 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951461742","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:25 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951463831","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:44:27 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10,9,8,7,6,5,4,3,2,1};
        bubbleSort(array, array.length);

      }
}","1546951465820","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:46:59 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951617036","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:01 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951619462","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:03 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951621666","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:05 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951623740","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:07 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951625898","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:09 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951627981","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:12 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951630038","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:14 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951632127","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:16 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951634332","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:18 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951636600","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:20 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951638765","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:23 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951641016","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:25 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951643306","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:27 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951645411","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:29 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951647516","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:31 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951649621","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:33 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951651610","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:35 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951653652","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:38 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951655763","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:40 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951658136","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:42 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951660194","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:45 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951662402","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:47 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951665635","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:50 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951667985","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:54 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951670689","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:47:58 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951674660","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:48:01 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951678291","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:48:04 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951682032","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:48:07 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951685060","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:48:09 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {100,90,80,70,60,50,40,30,20,10};
        bubbleSort(array, array.length);

      }
}","1546951687343","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:08 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951745946","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:11 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951748872","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:13 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951751396","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:16 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951753815","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:18 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951756285","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:21 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951758846","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:23 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951761332","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:26 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951763772","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:28 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951766135","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:30 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951768572","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:33 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951770992","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:35 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951773470","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:38 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951775894","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:41 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951778492","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:43 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951781630","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:46 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951783751","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:48 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951786347","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:51 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951789029","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:53 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951791550","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:56 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951794051","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:49:59 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951796611","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:02 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951799150","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:04 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951802346","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:07 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951804819","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:09 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951807342","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:12 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951809766","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:14 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951812181","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:17 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951814802","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:20 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951817711","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:22 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {1000,900,800,700,600,500,400,300,200,100};
        bubbleSort(array, array.length);

      }
}","1546951820118","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:38 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951835477","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:40 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951838279","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:43 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951840995","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:47 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951844045","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:50 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951847241","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:54 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951850709","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:50:57 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951854176","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:00 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951857223","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:02 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951860193","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:05 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951862786","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:07 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951865203","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:09 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951867616","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:12 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951870043","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:14 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951872442","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:17 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951875071","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:19 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951877543","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:22 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951880007","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:24 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951882553","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:27 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951884901","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:29 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951887183","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:31 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951889563","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:34 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951892003","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:37 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951894613","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:39 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951897096","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:41 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951899883","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:44 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951902055","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:46 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951904113","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:49 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951906988","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:52 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951909705","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:51:54 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {10000,9000,8000,7000,6000,5000,4000,3000,2000,1000};
        bubbleSort(array, array.length);

      }
}","1546951912188","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:14 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951931945","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:17 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951935044","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:20 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951937803","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:23 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951941041","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:25 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951943530","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:28 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951946056","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:30 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951948446","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:33 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951950872","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:35 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951953393","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:38 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951955916","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:40 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951958544","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:43 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951961006","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:46 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951963503","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:48 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951966191","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:51 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951968673","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:54 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951971461","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:56 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951974180","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:52:59 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951976844","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:01 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951979288","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:03 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951981660","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:06 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951984043","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:09 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951986575","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:11 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951989121","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:13 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951991528","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:16 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951994010","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:19 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951996449","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:21 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546951999093","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:24 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546952002015","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:26 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546952004383","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:29 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {67,66,65,64,63};
        bubbleSort(array, array.length);

      }
}","1546952006736","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:49 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952027148","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:51 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952029453","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:54 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952031961","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:53:57 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952034727","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:00 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952037843","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:02 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952040343","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:05 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952042707","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:07 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952045154","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:10 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952047698","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:14 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952050742","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:16 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952054436","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:19 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952056999","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:21 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952059241","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:24 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952061670","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:27 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952064106","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:29 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952067127","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:32 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952069802","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:34 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952072092","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:36 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952074297","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:39 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952076645","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:42 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952079142","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:46 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952082925","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:51 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952086993","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:55 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952091248","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:54:58 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952095281","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:01 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952099060","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:04 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952102057","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:06 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952104131","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:08 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952106356","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:10 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {8005,8004,8003,8002,8001};
        bubbleSort(array, array.length);

      }
}","1546952108630","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:31 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952128463","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:33 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952131347","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:36 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952134049","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:38 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952136542","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:41 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952139073","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:43 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952141549","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:46 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952144053","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:48 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952146548","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:51 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952149069","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:54 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952151699","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:56 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952154273","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:55:59 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952156949","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:02 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952159619","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:05 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952162569","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:08 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952165734","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:10 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952168373","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:13 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952170939","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:16 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952173663","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:18 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952176209","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:21 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952178779","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:23 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952181349","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:26 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952183822","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:28 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952186199","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:31 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952188629","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:33 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952191113","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:36 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952193609","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:38 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952196128","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:41 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952198659","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:43 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952201109","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:56:46 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {29, 27, 25,23,21,19,17,15};
        bubbleSort(array, array.length);

      }
}","1546952203862","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:05 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952222983","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:08 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952226143","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:11 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952228653","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:13 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952231170","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:16 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952233793","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:19 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952236533","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:21 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952239219","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:24 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952241829","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:27 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952244833","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:30 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952247859","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:33 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952250581","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:35 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952253123","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:38 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952255579","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:40 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952258301","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:43 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952260771","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:46 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952263372","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:49 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952266269","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:53 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952269745","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:56 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952273449","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:57:58 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952276457","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:01 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952278922","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:03 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952281344","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:06 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952283684","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:08 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952286508","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:11 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952288926","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:14 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952291810","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:17 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952294294","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:21 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952298182","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:24 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952301616","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:27 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952304801","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:42 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952319611","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:44 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952322398","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:46 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952324932","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:48 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952326988","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:51 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952329027","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:53 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952331150","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:55 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952333274","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:57 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952335557","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:58:59 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952337764","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 12:59:02 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952339773","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:00:38 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952342791","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:01:01 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952442149","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:01:36 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952463036","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:01:55 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952497682","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:02:15 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952516276","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:02:34 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952537069","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:02:54 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952555308","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:03:13 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952575353","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:03:31 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952594489","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:03:47 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952612705","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:03:56 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952628463","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:03:58 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952636345","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:00 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952638551","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:02 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952640653","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:04 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952642853","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:07 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952644956","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:09 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952647187","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:12 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952649556","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:16 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952652785","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:18 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15};
        bubbleSort(array, array.length);

      }
}","1546952656090","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:44 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952681549","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:46 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952684453","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:49 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952686893","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:52 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952689943","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:55 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952692571","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:04:58 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952695747","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:00 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952698425","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:03 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952700960","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:07 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952704122","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:09 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952707643","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:12 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952709890","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:14 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952712639","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:17 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952715060","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:19 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952717287","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:21 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952719600","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:25 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952721933","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:29 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952725658","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:32 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952729845","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:34 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952732068","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:36 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952734464","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:39 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952736717","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:42 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952739485","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:44 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952742222","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:47 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952744816","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:50 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952747685","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:53 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952750911","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:56 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952753629","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:05:59 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952756967","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:02 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952760058","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:05 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198};
        bubbleSort(array, array.length);

      }
}","1546952762667","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:24 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952782107","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:26 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952784497","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:29 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952787003","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:31 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952789581","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:35 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952792058","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:38 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952795812","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:41 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952798887","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:43 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952801433","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:45 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952803607","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:49 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952806009","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:54 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952809955","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:06:57 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952814391","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:01 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952817777","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:03 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952821127","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:05 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952823455","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:09 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952825883","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:11 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952829065","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:14 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952831604","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:17 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952834867","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:20 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952837559","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:22 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952840175","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:24 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952842565","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:26 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952844833","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:29 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952847046","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:31 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952849282","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:33 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952851557","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:35 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952853725","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:38 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952855830","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:40 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952858073","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:42 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {3, 6, 8, 9, 1, 2, 7, 10, 4, 5};
        bubbleSort(array, array.length);

      }
}","1546952860235","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:07:58 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952876374","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:01 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952878780","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:04 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952881401","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:06 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952884161","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:09 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952886652","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:12 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952889158","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:15 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952892890","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:18 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952896025","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:20 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952898262","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:22 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952900537","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:24 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952902842","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:27 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952905087","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:29 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952907348","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:31 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952909509","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:33 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952911761","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:36 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952914067","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:38 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952916188","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:40 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952918462","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:42 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952920767","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:45 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952923041","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:47 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952925124","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:49 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952927298","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:51 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952929503","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:53 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952931693","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:56 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952933914","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:08:58 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952936206","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:00 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952938464","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:02 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952940616","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:05 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952942859","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:07 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {20, 7, 6, 12, 13, 14, 17, 5, 19, 2};
        bubbleSort(array, array.length);

      }
}","1546952945108","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:37 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952975344","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:40 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952977904","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:43 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952980702","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:45 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952983221","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:48 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952985680","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:50 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952988071","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:52 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952990360","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:54 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952992682","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:56 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952994787","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:09:59 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952996954","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:01 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546952999128","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:03 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953001334","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:05 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953003539","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:08 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953005675","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:11 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953008555","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:14 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953011453","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:16 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953014286","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:20 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953016974","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:25 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953020618","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:28 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953025213","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:32 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953028686","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:36 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953032400","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:39 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953036769","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:42 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953039950","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:45 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953043022","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:48 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953045555","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:50 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953048094","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:52 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953050621","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:55 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953053022","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:10:57 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {69, 54, 98, 41, 32, 96, 59, 48, 84, 85};
        bubbleSort(array, array.length);

      }
}","1546953055437","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:17 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953074299","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:19 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953077147","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:22 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953079878","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:26 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953082488","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:29 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953086815","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:32 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953089810","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:35 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953092710","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:37 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953095373","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:40 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953097965","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:43 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953100796","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:45 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953103350","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:48 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953105992","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:51 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953108783","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:54 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953111507","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:11:57 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953114145","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:00 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953117137","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:03 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953120728","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:05 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953123097","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:09 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953125727","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:12 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953129419","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:14 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953132262","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:17 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953134932","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:20 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953137657","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:22 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953140313","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:25 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953142899","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:28 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953145566","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:30 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953148184","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:33 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953151000","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:36 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953153745","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:12:39 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {864, 497, 995, 31, 491, 111, 613, 235, 971, 100};
        bubbleSort(array, array.length);

      }
}","1546953156389","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:03 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953181303","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:06 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953183898","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:09 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953187012","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:12 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953189850","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:15 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953192531","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:17 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953195191","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:20 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953197807","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:23 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953200581","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:25 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953203281","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:28 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953206041","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:31 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953208887","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:34 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953211671","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:37 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953214678","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:39 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953217543","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:41 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953219779","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:44 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953222038","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:46 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953224377","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:48 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953226704","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:51 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953228820","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:53 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953231173","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:55 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953233532","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:13:57 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953235636","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:00 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953237958","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:02 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953240130","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:04 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953242319","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:06 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953244471","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:08 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953246558","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:10 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953248647","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:12 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953250752","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:15 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {763, 19, 737, 861, 808};
        bubbleSort(array, array.length);

      }
}","1546953252927","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:36 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953272469","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:39 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953276680","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:41 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953279285","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:44 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953281875","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:46 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953284103","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:50 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953287001","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:52 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953290125","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:55 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953292674","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:57 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953295105","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:14:59 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953297782","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:02 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953299949","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:04 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953302123","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:06 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953304460","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:09 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953306903","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:12 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953309982","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:15 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953312550","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:17 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953315399","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:20 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953317890","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:22 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953320411","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:25 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953322885","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:27 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953325159","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:30 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953327665","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:33 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953330588","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:35 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953333360","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:38 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953336051","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:40 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953338572","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:43 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953340893","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:45 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953343167","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:47 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953345457","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:15:50 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {179, 886, 924, 822, 614};
        bubbleSort(array, array.length);

      }
}","1546953347677","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:26 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953444163","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:29 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953446822","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:31 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953449458","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:34 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953452072","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:36 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953454541","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:39 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953457059","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:41 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953459508","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:44 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953462016","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:47 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953464559","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:49 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953467135","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:52 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953469987","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:55 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953472581","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:17:57 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953475208","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:00 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953477706","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:02 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953480134","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:05 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953482640","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:07 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953485179","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:09 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953487669","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:12 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953489874","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:14 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953492095","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:16 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953494284","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:19 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953497021","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:21 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953499380","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:23 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953501570","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:26 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953503875","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:28 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953506112","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:30 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953508248","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:32 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953510321","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:34 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953512410","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:18:36 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {133804, 196534, 138806, 208428, 611667, 342419, 478838, 75229, 280039, 674374, 670343, 758173, 409699, 816659, 159993, 911837, 400574, 463094, 110565, 210569, 165900, 484651, 232579, 383987, 994762, 813584, 424048, 729979, 457528, 51667, 878147, 480615, 763111, 222084, 635850, 603455, 379188, 448805, 3, 377884, 782504, 394375, 569650, 98900, 824251, 140359, 922860, 968251, 853139, 926611};
        bubbleSort(array, array.length);

      }
}","1546953514399","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:02 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953539922","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:04 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953542312","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:06 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953544668","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:09 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953546926","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:11 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953549247","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:13 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953551452","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:15 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953553720","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:18 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953555910","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:20 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953558138","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:22 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953560505","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:25 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953562827","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:27 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953565069","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:29 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953567375","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:32 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953569828","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:34 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953572170","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:36 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953574453","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:38 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953576828","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:41 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953579064","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:43 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953581731","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:46 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953584021","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:48 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953586327","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:50 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953588501","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:53 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953590906","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:55 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953593372","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:19:57 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953595609","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:00 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953597798","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:02 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953600103","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:04 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953602470","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:06 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953604831","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:09 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {4184, 2036, 2435, 9234, 8251, 9648, 5359, 6866, 1916, 9941, 3611, 5807, 6872, 8561, 1051, 5310, 9152, 5309, 5916, 7836, 3057, 4313, 6501, 6812, 5797, 8098, 3176, 2698, 2451, 6600, 1007, 5564, 8135, 164, 6906, 7273, 2365, 882, 7374, 7717, 4717, 4825, 2980, 4603, 4181, 6737, 4607, 9588, 5381, 7004, 5070, 9313, 3946, 1081, 9179, 4842, 6781, 6064, 934, 1139, 4692, 7448, 797, 1693, 791, 343, 5000, 5583, 2066, 4416, 2082, 2144, 1101, 8835, 4865, 5957, 7933, 7151, 206, 8943, 4814, 4376, 972, 8217, 4362, 771, 2685, 5023, 8242, 3716, 137, 7824, 5119, 392, 2060, 4858, 4617, 2574, 243, 8959};
        bubbleSort(array, array.length);

      }
}","1546953606973","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:24 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953621676","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:26 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953624368","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:28 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953626564","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:31 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953628855","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:33 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953631192","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:36 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953633651","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:38 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953636289","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:41 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953638942","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:43 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953641401","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:47 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953643860","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:49 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953647558","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:52 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953649867","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:54 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953652125","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:20:57 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953654786","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:00 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953657254","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:03 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953660777","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:07 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953663998","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:10 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953667365","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:13 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953670689","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:16 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953673575","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:20 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953676843","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:22 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953680190","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:25 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953683015","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:30 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953685945","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:34 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953690645","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:37 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953694266","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:40 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953697921","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:43 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953701040","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:46 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953704046","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:21:50 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {264927, 465614, 755728, 832555, 703286, 152740, 869784, 258392, 103780, 523126, 317835, 493282, 586911, 545903, 476398, 746145, 387014, 219268, 299823, 504949, 911528, 849526, 937581, 516828, 884449, 306787, 326538, 164593, 360180, 937030, 357445, 678795, 504645, 105247, 946133, 56077, 496146, 816781, 374011, 682316, 811639, 678995, 865684, 179648, 572942, 194966, 567720, 867774, 536330, 24505, 708963, 516697, 987747, 708422, 103116, 20747, 13542, 421158, 376547, 264878, 770256, 739192, 259637, 776026, 704086, 852352, 934579, 182350, 63158, 385953, 94855, 105336, 607985, 584312, 273358, 510039, 960108, 594281, 979101, 334262, 674684, 249954, 697148, 504633, 18231, 878818, 394520, 58112, 232462, 394473, 485355, 272823, 997811, 13613, 711652, 118787, 201485, 148330, 507328, 854119, 293896, 966516, 112982, 95827, 32122, 796642, 361196, 877582, 848617, 580711, 245802, 192702, 145430, 702127, 603695, 685319, 842888, 338847, 21184, 748598, 599073, 954081, 13126, 789959, 940916, 535246, 914755, 122451, 294164, 103327, 60291, 928731, 27214, 518025, 712183, 122023, 130824, 218321, 770100, 319585, 152292, 747831, 948692, 671032, 306528, 891946, 992151, 470689, 192979, 237001, 925636, 933650, 616165, 19524, 800914, 794184, 878743, 187198, 63958, 615063, 754142, 919426, 11917, 622104, 571309, 925518, 886942, 610300, 452582, 862475, 14300, 237366, 993060, 749627, 51894, 511468, 488999, 562369, 121746, 536011, 691081, 373952, 74900, 406782, 618190, 230425, 984989, 184776, 486659, 19402, 183596, 844283, 373964, 348993, 613707, 543620, 77391, 817082, 105984, 962447, 192234, 988547, 104580, 571384, 673722, 72328, 881813, 643666, 790722, 938537, 976466, 261181, 194582, 909378, 907459, 178862, 256462, 905688, 603111, 643673, 110018, 205459, 847156, 850836, 545983, 354075, 820165, 737626, 598419, 930156, 953371, 883264, 500771, 279638, 917731, 120252, 817288, 296848, 551706, 919637, 102207, 980348, 19899, 552151, 430918, 506039, 252722, 152263, 423830, 460107, 752803, 683537, 446403, 476554, 347456, 60839, 750012, 344778, 998323, 76315, 189917, 773248, 246772, 947788, 253761, 961304, 140860, 345395, 793017, 556492, 194124, 656623, 153770, 78280, 226406, 183095, 257767, 221093, 368967, 764358, 137147, 376054, 971984, 283939, 844160, 948132, 640663, 953789, 839824, 313451, 403702, 744255, 280957, 360978, 234046, 229052, 788841, 221275, 639296, 413827, 938102, 498336, 904340, 920505, 575423, 264418, 298089, 159192, 287216, 631589, 916777, 85502, 53402, 400934, 553737, 387239, 976725, 378716, 488998, 736561, 645828, 59588, 650259, 715271, 647635, 484307, 406248, 564634, 312477, 287267, 197525, 588499, 268645, 272930, 301624, 99494, 511499, 52179, 152627, 919998, 738410, 580833, 408449, 881839, 290304, 289593, 199049, 77378, 426257, 304591, 766808, 582091, 776246, 240835, 396310, 652709, 347298, 222379, 770056, 604024, 852263, 642185, 213052, 80789, 723652, 238214, 556298, 790173, 365607, 413920, 573647, 838240, 467294, 619420, 558350, 45498, 996493, 472938, 158403, 903408, 293288, 149757, 625398, 603983, 860766, 190765, 940889, 300983, 943698, 291448, 644090, 489172, 652963, 824771, 419698, 595464, 36595, 547573, 743735, 663788, 984365, 663430, 178985, 182156, 152260, 446604, 404929, 465085, 594096, 975381, 72391, 570946, 758695, 336765, 718942, 438190, 557406, 715779, 352382, 943387, 561088, 562639, 957399, 114704, 997345, 601133, 459008, 282899, 831127, 947256, 632491, 878678, 278250, 631832, 509275, 891495, 21232, 130328, 289876, 166793, 840891, 842612, 487071, 833487, 683466, 823857, 902127, 244534, 475103, 654184, 946696, 74332, 581949, 797977, 187818, 503511, 220163, 62265, 550908, 938932, 13234, 995955, 313435, 366528, 90673, 317281, 773339, 168747, 26154, 172269, 401942, 518870, 415702, 389069, 413027, 711277, 180495, 811737, 51671, 61319, 151527, 974476, 774681, 909883, 14420, 8560, 469263, 320166, 738235, 380437, 380256, 568932, 860544, 859677, 493578, 122689, 635973, 867174, 494447, 897378, 983138, 851943, 682797, 452818, 458252, 385735, 729294, 168609, 561591, 758250, 523625, 943538, 101509, 409956, 162535, 847172, 404658, 411986, 939647, 985194, 355112, 601116, 391784, 170497, 27018, 37953, 689464, 361189, 174630, 280672, 987701, 666592, 666342, 691623, 568586, 525547, 123119, 450609, 52078, 108142, 146439, 343016, 222935, 924025, 904155, 549995, 438062, 719159, 914165, 101514, 34236, 329671, 993952, 963221, 495966, 781906, 482739, 103910, 329599, 929464, 721572, 808726, 423132, 165326, 84076, 675827, 418136, 355772, 806590, 382417, 787934, 579529, 498141, 34635, 682628, 155137, 152382, 33831, 765777, 220584, 697330, 425211, 665637, 188497, 173179, 497980, 212152, 348972, 400854, 351296, 476413, 543779, 860304, 334728, 606639, 468122, 830348, 863132, 249949, 858078, 231471, 696661, 914454, 544152, 783103, 789177, 396472, 821782, 541473, 919291, 247674, 627054, 985311, 480665, 831409, 184033, 78081, 82190, 558309, 834809, 649045, 586997, 342998, 763333, 295768, 722963, 946686, 984704, 138695, 115024, 827334, 292052, 897301, 979947, 900824, 844868, 281573, 432171, 994166, 747646, 891705, 265626, 919608, 152775, 207827, 147392, 996743, 174025, 799650, 889200, 878450, 544637, 63944, 275026, 646708, 299331, 57822, 931873, 794299, 443265, 445420, 20459, 640641, 92417, 296586, 634388, 525568, 97157, 328925, 345454, 397238, 990837, 473013, 710359, 664358, 747322, 747657, 662352, 491676, 727158, 4501, 498041, 901728, 558220, 415017, 355076, 70677, 926753, 974426, 743907, 281213, 989934, 429412, 388688, 755522, 875641, 735721, 752698, 787256, 596674, 613964, 18069, 742562, 780938, 71995, 794076, 537982, 425447, 142144, 427625, 424743, 266825, 132990, 45099, 286518, 206971, 126674, 174405, 542853, 358556, 574742, 468775, 954556, 749880, 672904, 882620, 129507, 413040, 508510, 264968, 445591, 848794, 13246, 60242, 341655, 1821, 921967, 566722, 386621, 243060, 850786, 314126, 175428, 968595, 719602, 804340, 798062, 29600, 235134, 680873, 527665, 152298, 574297, 216052, 432058, 145748, 144500, 632176, 412215, 419099, 16698, 844351, 285310, 325819, 496735, 902870, 72554, 439861, 308072, 933257, 963687, 746896, 254602, 567464, 771881, 61131, 678503, 53742, 303532, 490057, 528939, 803720, 764408, 630032, 560308, 234926, 709751, 811260, 669523, 959199, 443073, 576835, 614414, 464673, 604694, 412304, 794584, 624018, 98536, 777619, 122331, 256269, 335481, 451233, 811961, 78926, 472509, 51789, 820433, 933345, 112420, 755165, 21207, 129762, 67924, 109883, 230725, 234923, 761188, 150272, 44014, 267313, 213545, 97345, 356595, 482249, 937084, 827945, 507392, 607045, 86591, 215967, 235484, 925927, 785504, 129269, 379313, 860461, 285159, 280513, 700868, 508392, 622406, 319818, 610328, 788323, 305955, 2769, 3010, 739692, 161966, 142712, 146752, 822447, 360810, 666495, 717786, 368475, 818503, 948929, 227657, 278912, 277674, 4225, 969739, 550312, 820056, 80895, 575900, 764834, 113924, 845974, 605024, 526084, 184440, 382584, 80383, 51650, 391424, 562431, 276434, 986411, 20183, 396277, 256321, 679244, 263908, 631605, 469629, 147240, 219741, 77191, 849289, 763561, 337277, 272890, 889851, 156602, 211526, 54028, 603470, 976312, 144226, 551382, 890753, 640835, 394114, 786162, 677897, 86299, 625330, 723461, 203568, 488796, 376930, 74157, 812783, 987880, 139819, 8361, 510569, 296124, 958074, 912882, 919395, 339860, 497754, 146676, 363529, 79325, 953332, 371970, 589645, 515838, 207376, 646906, 92815, 114482, 918713, 301705, 179868, 117614, 124966, 2853, 953787, 521193, 118994, 834566, 23827, 568110, 454336, 762130, 245281, 3716, 626603, 842487, 18915, 83385, 250669, 446393, 481347, 140929, 73455, 49182, 557307, 613304, 677644, 139050, 50988, 780840, 158418, 142925, 678481, 950778, 952514, 115866, 9462, 85345, 93861, 761727, 642285, 276761, 234250, 428351, 780205, 231073, 1974, 566600, 466000, 740919, 699849, 244048, 852516, 65536, 710463, 310886, 497782, 370539, 353496, 882870};
        bubbleSort(array, array.length);

      }
}","1546953707060","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:33 GMT 2019","1","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953871184","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:35 GMT 2019","2","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953873395","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:37 GMT 2019","3","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953875516","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:39 GMT 2019","4","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953877624","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:41 GMT 2019","5","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953879713","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:43 GMT 2019","6","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953881734","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:45 GMT 2019","7","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953883738","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:47 GMT 2019","8","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953885696","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:49 GMT 2019","9","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953887717","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:51 GMT 2019","10","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953889821","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:53 GMT 2019","11","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953891873","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:55 GMT 2019","12","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953893916","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:57 GMT 2019","13","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953895937","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:24:59 GMT 2019","14","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953897957","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:01 GMT 2019","15","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953900031","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:04 GMT 2019","16","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953902067","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:06 GMT 2019","17","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953904157","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:09 GMT 2019","18","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953906246","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:12 GMT 2019","19","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953909187","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:16 GMT 2019","20","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953912310","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:21 GMT 2019","21","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953916732","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:25 GMT 2019","22","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953921287","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:28 GMT 2019","23","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953925755","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:33 GMT 2019","24","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953928787","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:36 GMT 2019","25","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953933305","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:38 GMT 2019","26","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953936565","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:41 GMT 2019","27","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953939033","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:44 GMT 2019","28","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953941276","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:47 GMT 2019","29","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953944287","true","false","657.0","0.0"
"Date","Repetitions","Patch","Output","Time","Compiled","Passed Unit Tests?","Opacitor measurement 1","Opacitor measurement 2"
"Tue Jan 08 13:25:49 GMT 2019","30","[InsertLineEdit{lineNumber=6, lineContents='//this is a comment'}]","import java.util.Arrays;

public class IterativeBubbleSort {

    static void bubbleSort(int array[], int n){
        if (n==1){
//this is a comment
            return;
        }

        for (int i=0; i < n; i++){
            for (int j =1; j < (n-i); j++){
            if (array[j-1] > array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }

            }

        }
        System.out.println(""Iterative - Sorted array: "" + Arrays.toString(array));
        System.out.println(""time:"" + System.currentTimeMillis());

    }

    public static void main(String[] args) {
        //int array[] = {7, 69, 76, 102, 94, 53, 62 , 101};
        int array[] = {102418, 391041, 979493, 765640, 899906, 832710, 806520, 699731, 63768, 68175, 521103, 122171, 776709, 890837, 644347, 974933, 34, 474389, 963630, 709592, 576313, 623896, 509591, 510928, 213};

        bubbleSort(array, array.length);

      }
}","1546953947374","true","false","657.0","0.0"
