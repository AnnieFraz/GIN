@startuml

title __UNITTESTS's Class Diagram__\n

  package  {
    class ATriangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        + ATriangle()
        {static} + classifyTriangle()
        {static} - delay()
    }
  }
  

  package  {
    class ATriangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        {static} + classifyTriangle()
        {static} - delay()
    }
  }
  

  package  {
    class ATriangleTest {
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class ATriangleTest {
        + ATriangleTest()
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class CTriangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        {static} + classifyTriangle()
        {static} - delay()
    }
  }
  

  package  {
    class CTriangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        + CTriangle()
        {static} + classifyTriangle()
        {static} - delay()
    }
  }
  

  package  {
    class CTriangleTest {
        + CTriangleTest()
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class CTriangleTest {
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class Error {
        ~ notInitialised : String
        + returnTen()
        + thisMethodTakesASecond()
    }
  }
  

  package  {
    class Error {
        ~ notInitialised : String
        + Error()
        + returnTen()
        + thisMethodTakesASecond()
    }
  }
  

  package  {
    class ErrorTest {
        ~ error : Error
        + setUp()
        + testException()
        + testTimeout()
        + testAssertionError()
    }
  }
  

  package  {
    class ErrorTest {
        ~ error : Error
        + ErrorTest()
        + setUp()
        + testException()
        + testTimeout()
        + testAssertionError()
    }
  }
  

  package  {
    class Example {
        + Example()
        + returnTen()
        + returnOneHundred()
    }
  }
  

  package  {
    class Example {
        + Example()
        + returnTen()
        + returnOneHundred()
    }
  }
  

  package  {
    class ExampleBase {
        ~ justAField : int
        + ExampleBase()
    }
  }
  

  package  {
    class ExampleBase {
        ~ justAField : int
        + ExampleBase()
    }
  }
  

  package  {
    class ExampleTest {
        + ExampleTest()
        + testReturnTen()
        + emptyTest()
        + testReturnOneHundred()
    }
  }
  

  package  {
    class ExampleTest {
        + testReturnTen()
        + emptyTest()
        + testReturnOneHundred()
    }
  }
  

  package  {
    class ExampleWithInnerClass {
        + ExampleWithInnerClass()
        + simpleMethod()
    }
  }
  

  package  {
    class ExampleWithInnerClass {
        + simpleMethod()
    }
  }
  

  package  {
    class MyInner {
        ~ number : int
        ~ MyInner()
        ~ getNumber()
    }
  }
  

  package  {
    class ExampleWithInnerClassTest {
        + ExampleWithInnerClassTest()
        + testSimpleMethod()
    }
  }
  

  package  {
    class ExampleWithInnerClassTest {
        + testSimpleMethod()
    }
  }
  

  package  {
    class QuickTriangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        {static} + classifyTriangle()
        {static} - delay()
    }
  }
  

  package  {
    class QuickTriangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        + QuickTriangle()
        {static} + classifyTriangle()
        {static} - delay()
    }
  }
  

  package  {
    class QuickTriangleTest {
        + QuickTriangleTest()
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class QuickTriangleTest {
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    package gin {
      class Small {
          + Small()
          {static} + Dummy()
      }
    }
  }
  

  package  {
    package gin {
      class Small {
          {static} + Dummy()
      }
    }
  }
  

  package  {
    package gin {
      class Small2 {
          {static} + Dummy()
      }
    }
  }
  

  package  {
    package gin {
      class Small2 {
          + Small2()
          {static} + Dummy()
      }
    }
  }
  

  package  {
    class Triangle {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        {static} + classifyTriangle()
        {static} - delay()
        {static} - wasteCPU()
        {static} + main()
    }
  }
  

  package  {
    class TriangleCPU {
        {static} ~ INVALID : int
        {static} ~ SCALENE : int
        {static} ~ EQUALATERAL : int
        {static} ~ ISOCELES : int
        {static} + classifyTriangle()
        {static} - delay()
        {static} - wasteCPU()
        {static} + main()
    }
  }
  

  package  {
    class TriangleCPUTest {
        + TriangleCPUTest()
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class TriangleTest {
        + TriangleTest()
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  package  {
    class TriangleTest {
        + TriangleTest()
        - checkClassification()
        + testInvalidTriangles()
        + testEqualateralTriangles()
        + testIsocelesTriangles()
        + testScaleneTriangles()
    }
  }
  

  ExampleWithInnerClass +-down- MyInner


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
