@startuml

title __RUNNER's Class Diagram__\n

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class CacheClassLoader {
          # customCompiledCode : Map<String, CompiledCode>
          + CacheClassLoader()
          + CacheClassLoader()
          # findClass()
          + setCustomCompiledCode()
          {static} - classPathToURLs()
          {static} + addSystemClassPath()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class IsolatedTestRunner {
          + runTest()
          + buildRequest()
          + annotateTestWithTimeout()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class ModifiableTest {
          - timeout : long
          ~ expected : Class<? extends Throwable>
          + ModifiableTest()
          + annotationType()
          + timeout()
          + expected()
          + toString()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class TestRunListener {
          - unitTestResult : List<UnitTestResult>
          - startTime : long
          + TestRunListener()
          + testFailure()
          + testFinished()
          + testStarted()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class TestRunner {
          {static} + ISOLATED_TEST_RUNNER_METHOD_NAME : String
          # packageDirectory : File
          # className : String
          # tests : List<UnitTest>
          # classPath : String
          # outputfileString : String
          + TestRunner()
          + TestRunner()
          - testsForClass()
          + test()
          - emptyResults()
          # compile()
          + runTests()
          + runSingleTest()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class UnitTest {
          {static} + defaultTimeoutMS : long
          - className : String
          - methodName : String
          - timeoutMS : long
          + UnitTest()
          + setTimeoutMS()
          + getTestName()
          + getClassName()
          + getTimeoutMS()
          + getMethodName()
          + toString()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class UnitTestResult {
          - repNumber : int
          - passed : Boolean
          - timedOut : Boolean
          - exceptionType : String
          - exceptionMessage : String
          - executionTime : long
          - expectedValue : String
          - actualValue : String
          + getTest()
          + setTest()
          + getPassed()
          + getTimedOut()
          + getExceptionType()
          + getExceptionMessage()
          + getAssertionExpectedValue()
          + getAssertionActualValue()
          + getExecutionTime()
          + setRepNumber()
          + getRepNumber()
          + UnitTestResult()
          + UnitTestResult()
          + addFailure()
          + addExecutionTime()
          + toString()
      }
    }
  }
  

  package  {
    package com.anniefraz.dissertation.test.runner.runner {
      class UnitTestResultSet {
          - results : LinkedList<UnitTestResult>
          - patchValid : boolean
          - compiledOK : boolean
          + getPatch()
          + getCleanCompile()
          + getValidPatch()
          + getResults()
          + UnitTestResultSet()
          + setResults()
          + allTestsSuccessful()
          + totalExecutionTime()
          + getUnitTestTimes()
          + toString()
      }
    }
  }
  

  CacheClassLoader -up-|> URLClassLoader
  ModifiableTest -up-|> Test
  TestRunListener -up-|> RunListener
  TestRunner o-- CacheClassLoader : classLoader
  UnitTestResult o-- UnitTest : test
  UnitTestResultSet o-- Patch : patch


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
